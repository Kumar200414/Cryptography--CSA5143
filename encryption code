#include <stdio.h>
#include <string.h>

// Function to encrypt the plaintext using the Caesar cipher
void encrypt(char plaintext[], int shift) {
    int i;
    char ch;
    for(i = 0; plaintext[i] != '\0'; ++i) {
        ch = plaintext[i];
        if(ch >= 'a' && ch <= 'z') {
            ch = ch + shift;
            if(ch > 'z') {
                ch = ch - 'z' + 'a' - 1;
            }
            plaintext[i] = ch;
        } else if(ch >= 'A' && ch <= 'Z') {
            ch = ch + shift;
            if(ch > 'Z') {
                ch = ch - 'Z' + 'A' - 1;
            }
            plaintext[i] = ch;
        }
    }
}

int main() {
    char text[100];
    int shift;

    printf("Enter a message to encrypt: ");
    fgets(text, sizeof(text), stdin);

    printf("Enter shift value: ");
    scanf("%d", &shift);

    // Remove the newline character from the text if present
    size_t len = strlen(text);
    if(len > 0 && text[len-1] == '\n') {
        text[len-1] = '\0';
    }

    // Encrypting the message
    encrypt(text, shift);
    printf("Encrypted message: %s\n", text);

    return 0;
}
